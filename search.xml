<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Zabbix 3.x Install]]></title>
      <url>%2F2017%2F04%2F11%2FZabbix-3-x-Install%2F</url>
      <content type="text"><![CDATA[关闭防火墙123[root@localhost ~]# systemctl disable firewalld.serviceRemoved symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.Removed symlink /etc/systemd/system/basic.target.wants/firewalld.service. 关闭selinux12345678910111213[root@localhost ~]# cat /etc/sysconfig/selinux # This file controls the state of SELinux on the system.# SELINUX= can take one of these three values:# enforcing - SELinux security policy is enforced.# permissive - SELinux prints warnings instead of enforcing.# disabled - No SELinux policy is loaded.SELINUX=disabled# SELINUXTYPE= can take one of three two values:# targeted - Targeted processes are protected,# minimum - Modification of targeted policy. Only selected processes are protected. # mls - Multi Level Security protection.SELINUXTYPE=targeted 配置静态IP及DNS123456789101112131415161718192021[root@localhost ~]# cat /etc/sysconfig/network-scripts/ifcfg-eno16777736 TYPE=EthernetBOOTPROTO=staticDEFROUTE=yesPEERDNS=yesPEERROUTES=yesIPV4_FAILURE_FATAL=noIPV6INIT=yesIPV6_AUTOCONF=yesIPV6_DEFROUTE=yesIPV6_PEERDNS=yesIPV6_PEERROUTES=yesIPV6_FAILURE_FATAL=noNAME=eno16777736UUID=b1bc3d2a-d038-4564-ae24-35a87f8f0551DEVICE=eno16777736ONBOOT=yesIPADDR=172.16.181.129NETMASK=255.255.255.0GATEWAY=172.16.181.2DNS1=180.76.76.76 重新启动网络服务1[root@localhost ~]# systemctl restart network.service 安装服务器端包123[root@localhost ~]# rpm -ivh http://repo.zabbix.com/zabbix/3.0/rhel/7/x86_64/zabbix-release-3.0-1.el7.noarch.rpmyum clean allyum install -y zabbix-server-mysql zabbix-web-mysql 启动mysql1234rpm -Uvh http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpmyum install -y mysql-serversystemctl start mysqldsystemctl enable mysqld 创建zabbix数据库1234567891011121314151617181920212223242526[root@localhost ~]# cd /usr/share/doc/zabbix-server-mysql-3.0.4/[root@localhost zabbix-server-mysql-3.0.4]# gunzip create.sql.gz [root@localhost zabbix-server-mysql-3.0.4]# mysql -uroot -pEnter password: Welcome to the MySQL monitor. Commands end with ; or \g.Your MySQL connection id is 2Server version: 5.6.33 MySQL Community Server (GPL)Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.mysql&gt; create database zabbix character set utf8 collate utf8_bin;Query OK, 1 row affected (0.00 sec)mysql&gt; grant all privileges on zabbix.* to zabbix@zabbix.example.com identified by 'zabbixpwd';Query OK, 0 rows affected (0.00 sec)mysql&gt; quit;Bye[root@localhost zabbix-server-mysql-3.0.4]# mysql -uzabbix -pzabbixpwd zabbix &lt; create.sqlWarning: Using a password on the command line interface can be insecure. 修改zabbix配置文件12[root@localhost ~]# hostnamectl set-hostname zabbix.example.com[root@localhost ~]# vim /etc/zabbix/zabbix_server.conf 1234DBHost=zabbix.example.comDBName=zabbixDBUser=zabbixDBPassword=zabbixpwd 123[root@localhost ~]# systemctl start zabbix-server[root@localhost ~]# systemctl enable zabbix-serverCreated symlink from /etc/systemd/system/multi-user.target.wants/zabbix-server.service to /usr/lib/systemd/system/zabbix-server.service. 配置http配置文件1234567891011[root@localhost ~]# vim /etc/httpd/conf.d/zabbix.conf php_value max_execution_time 300 php_value memory_limit 128M php_value post_max_size 16M php_value upload_max_filesize 2M php_value max_input_time 300 php_value always_populate_raw_post_data -1 php_value date.timezone Asia/Shanghai[root@localhost ~]# systemctl enable httpdCreated symlink from /etc/systemd/system/multi-user.target.wants/httpd.service to /usr/lib/systemd/system/httpd.service.[root@localhost ~]# systemctl start httpd 配置zabbix1http://172.16.181.129/zabbix/setup.php 12345若按照我上面的方法现在这个页面是可以打开的之后Next setup会让你填写数据库信息若有报错 ‘百度’出现zabbix为运行的提示 可以查看域名是否解析 zabbix乱码解决1234567891011[root@zabbix ~]# vim /usr/share/zabbix/include/defines.inc.phpdefine('ZBX_FONT_NAME', 'graphfont'); 修改为define('ZBX_FONT_NAME', 'msyh'); define('ZBX_GRAPH_FONT_NAME', 'graphfont'); 修改为define('ZBX_GRAPH_FONT_NAME', 'msyh')scp msyh.ttf root@172.16.181.129:/usr/share/zabbix/fonts Linux下代理端安装123456[root@localhost ~]# rpm -ivh http://repo.zabbix.com/zabbix/3.0/rhel/7/x86_64/zabbix-release-3.0-1.el7.noarch.rpm[root@localhost ~]# yum -y install zabbix-agent[root@localhost ~]# vim /etc/zabbix/zabbix_agentd.conf Server=172.16.181.129[root@localhost ~]# systemctl enable zabbix-agent[root@localhost ~]# systemctl start zabbix-agent]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Rsync Data Synchronization]]></title>
      <url>%2F2017%2F04%2F11%2FRsync-Data-Synchronization%2F</url>
      <content type="text"><![CDATA[安装程序yum install -y rsync xinetd 激活rsyncvim /etc/xinetd.d/rsync1234567891011service rsync&#123; disable = no flags = IPv6 socket_type = stream wait = no user = root server = /usr/bin/rsync server_args = --daemon log_on_failure += USERID&#125; 启动服务12[root@localhost ~]# /etc/init.d/xinetd startStarting xinetd: [ OK ] 查看服务12[root@localhost ~]# netstat -antup | grep 873tcp 0 0 :::873 :::* LISTEN 2611/xinetd 创建上传和下载用户12345678[root@localhost html]# useradd rget[root@localhost html]# echo '123456' | passwd --stdin rgetChanging password for user rget.passwd: all authentication tokens updated successfully.[root@localhost html]# useradd rput [root@localhost html]# echo '123456' | passwd --stdin rputChanging password for user rput.passwd: all authentication tokens updated successfully. 单独用户给目录添加权限1234567891011121314151617181920212223[root@localhost html]# ll -d /var/www/html/drwxr-xr-x. 2 root root 4096 Oct 16 2014 /var/www/html/[root@localhost html]# setfacl -R -m user:rput:rwx /var/www/html/[root@localhost html]# setfacl -R -m default:rput:rwx /var/www/html/ [root@localhost html]# setfacl -R -m user:rget:rwx /var/www/html/ [root@localhost html]# setfacl -R -m default:rget:rwx /var/www/html/ [root@localhost html]# getfacl /var/www/html/getfacl: Removing leading '/' from absolute path names# file: var/www/html/# owner: root# group: rootuser::rwxuser:rget:rwxuser:rput:rwxgroup::r-xmask::rwxother::r-xdefault:user::rwxdefault:user:rget:rwxdefault:user:rput:rwxdefault:group::r-xdefault:mask::rwxdefault:other::r-x 源服务器创建测试数据1[root@localhost html]# cp -r /boot/grub/ /var/www/html/ 备份服务器创建备份目录[root@localhost ~]# mkdir /backup 用命令执行备份若有报错需查看源服务器文件或文件夹的权限123456789101112131415161718192021222324252627282930313233343536373839[root@localhost ~]# rsync -azP --delete rget@192.168.134.137:/var/www/html/ /backup/rget@192.168.134.137's password: receiving incremental file list./grub/grub/device.map 63 100% 61.52kB/s 0:00:00 (xfer#1, to-check=15/18)grub/e2fs_stage1_5 13396 100% 6.39MB/s 0:00:00 (xfer#2, to-check=14/18)grub/fat_stage1_5 12636 100% 6.03MB/s 0:00:00 (xfer#3, to-check=13/18)grub/ffs_stage1_5 11780 100% 3.74MB/s 0:00:00 (xfer#4, to-check=12/18)grub/grub.conf 771 100% 250.98kB/s 0:00:00 (xfer#5, to-check=11/18)grub/iso9660_stage1_5 11772 100% 2.81MB/s 0:00:00 (xfer#6, to-check=10/18)grub/jfs_stage1_5 13284 100% 2.53MB/s 0:00:00 (xfer#7, to-check=9/18)grub/menu.lst -&gt; ./grub.confgrub/minix_stage1_5 11972 100% 1.90MB/s 0:00:00 (xfer#8, to-check=7/18)grub/reiserfs_stage1_5 14428 100% 1.53MB/s 0:00:00 (xfer#9, to-check=6/18)grub/splash.xpm.gz 1341 100% 145.51kB/s 0:00:00 (xfer#10, to-check=5/18)grub/stage1 512 100% 55.56kB/s 0:00:00 (xfer#11, to-check=4/18)grub/stage2 126116 100% 7.52MB/s 0:00:00 (xfer#12, to-check=3/18)grub/ufs2_stage1_5 12040 100% 691.64kB/s 0:00:00 (xfer#13, to-check=2/18)grub/vstafs_stage1_5 11380 100% 653.72kB/s 0:00:00 (xfer#14, to-check=1/18)grub/xfs_stage1_5 13980 100% 758.46kB/s 0:00:00 (xfer#15, to-check=0/18)sent 306 bytes received 148745 bytes 42586.00 bytes/sectotal size is 255482 speedup is 1.71 SSH密钥无交互备份备份服务器创建密钥对 123456789101112131415161718192021[root@localhost ~]# ssh-keygen Generating public/private rsa key pair.Enter file in which to save the key (/root/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /root/.ssh/id_rsa.Your public key has been saved in /root/.ssh/id_rsa.pub.The key fingerprint is:47:39:61:7d:44:1c:a5:50:82:fe:5c:f4:54:2d:d7:88 root@localhost.localdomainThe key's randomart image is:+--[ RSA 2048]----+| ooo*=+*|| ..oEo*.=|| .+ o.= || ... . .|| S .o . || . o || || || |+-----------------+ 拷贝密钥到源服务器12345[root@localhost ~]# ssh-copy-id rget@192.168.134.137rget@192.168.134.137's password: Now try logging into the machine, with "ssh 'rget@192.168.134.137'", and check in: .ssh/authorized_keysto make sure we haven't added extra keys that you weren't expecting. 测试无交互登录12[root@localhost ~]# ssh rget@192.168.134.137[rget@localhost ~]$ 测试同步123456[root@localhost ~]# rsync -azP --delete rget@192.168.134.137:/var/www/html/ /backup/Address 192.168.134.137 maps to localhost, but this does not map back to the address - POSSIBLE BREAK-IN ATTEMPT!receiving incremental file listsent 12 bytes received 355 bytes 244.67 bytes/sectotal size is 255482 speedup is 696.14 编写脚本测试且查看结果123456789101112[root@localhost ~]# cat &gt;&gt; /root/rget.sh &lt;&lt; EOF&gt; #!/bin/bash&gt; # rsync and ssh key get backup&gt; rsync -az --delete rget@192.168.134.137:/var/www/html/ /backup/ &gt; EOF[root@localhost ~]# chmod +x /root/rget.sh [root@localhost ~]# rm -rf /backup/*[root@localhost ~]# /root/rget.shAddress 192.168.134.137 maps to localhost, but this does not map back to the address - POSSIBLE BREAK-IN ATTEMPT![root@localhost ~]# ll /backup/total 4drwxr-xr-x. 2 root root 4096 Sep 13 09:50 grub 定期增量备份12[root@localhost ~]# crontab -e01 3 * * * /root/rget.sh &amp; 备份之后打包1tar -cvzf `date +%Y-%m-%d-%H%M%S` /backup/ 使用非系统用户进行备份服务端创建全局配置文件1234567891011121314151617181920212223[root@localhost ~]# touch /etc/rsyncd.conf[root@localhost ~]# cat &gt;&gt; /etc/rsyncd.conf &lt;&lt; EOF&gt; uid=nobody&gt; gid=nobody&gt; address = 192.168.134.137&gt; port=873&gt; hosts allow= 192.168.134.143 &gt; #hosts deny=0.0.0.0/32&gt; use chroot=yes&gt; max connections=5&gt; pid file=/var/run/rsyncd.pid&gt; lock file=/var/run/rsync.lock &gt; log file=/var/log/rsyncd.log &gt; motd file=/etc/rsyncd.motd &gt; &gt; [wwwroot] &gt; path=/var/www/html&gt; comment=rsync wwwroot&gt; read only=yes&gt; list=yes&gt; auth users=backuper&gt; secrets file=/etc/rsync.passwd&gt; EOF 创建提示信息文件和创建密码文件12345678910[root@localhost ~]# grep motd /etc/rsyncd.conf motd file=/etc/rsyncd.motd [root@localhost ~]# echo "Welcome to backup server" &gt; /etc/rsyncd.motd[root@localhost ~]# grep passwd /etc/rsyncd.conf secrets file=/etc/rsync.passwd[root@localhost ~]# cat &gt;&gt; /etc/rsync.passwd &lt;&lt; EOF&gt; backup:123456&gt; EOF[root@localhost ~]# cat /etc/rsync.passwdbackup:123456 测试备份1234567891011121314151617181920212223242526272829303132333435363738394041[root@localhost ~]# rsync -azP backup@192.168.134.137::wwwroot /backup/backup serverPassword: receiving incremental file list./grub/grub/device.map 63 100% 61.52kB/s 0:00:00 (xfer#1, to-check=15/18)grub/e2fs_stage1_5 13396 100% 12.78MB/s 0:00:00 (xfer#2, to-check=14/18)grub/fat_stage1_5 12636 100% 12.05MB/s 0:00:00 (xfer#3, to-check=13/18)grub/ffs_stage1_5 11780 100% 11.23MB/s 0:00:00 (xfer#4, to-check=12/18)grub/grub.conf 771 100% 752.93kB/s 0:00:00 (xfer#5, to-check=11/18)grub/iso9660_stage1_5 11772 100% 11.23MB/s 0:00:00 (xfer#6, to-check=10/18)grub/jfs_stage1_5 13284 100% 6.33MB/s 0:00:00 (xfer#7, to-check=9/18)grub/menu.lst -&gt; ./grub.confgrub/minix_stage1_5 11972 100% 5.71MB/s 0:00:00 (xfer#8, to-check=7/18)grub/reiserfs_stage1_5 14428 100% 1.72MB/s 0:00:00 (xfer#9, to-check=6/18)grub/splash.xpm.gz 1341 100% 163.70kB/s 0:00:00 (xfer#10, to-check=5/18)grub/stage1 512 100% 62.50kB/s 0:00:00 (xfer#11, to-check=4/18)grub/stage2 126116 100% 7.52MB/s 0:00:00 (xfer#12, to-check=3/18)grub/ufs2_stage1_5 12040 100% 691.64kB/s 0:00:00 (xfer#13, to-check=2/18)grub/vstafs_stage1_5 11380 100% 617.40kB/s 0:00:00 (xfer#14, to-check=1/18)grub/xfs_stage1_5 13980 100% 718.54kB/s 0:00:00 (xfer#15, to-check=0/18)sent 354 bytes received 148823 bytes 22950.31 bytes/sectotal size is 255482 speedup is 1.71 实现无交亏脚本12345678[root@localhost ~]# export RSYNC_PASSWORD=123456[root@localhost ~]# rsync -azP backup@192.168.134.137::wwwroot /backup/backup serverreceiving incremental file listsent 60 bytes received 433 bytes 986.00 bytes/sectotal size is 255482 speedup is 518.22 脚本1234567[root@localhost ~]# cat &gt;&gt; backup.sh &lt;&lt; EOF&gt; #!/bin/bash&gt; export RSYNC_PASSWORD=123456&gt; rsync -azP backup@192.168.134.137::wwwroot /backup/&gt; EOF[root@localhost ~]# chmod +x backup.sh [root@localhost ~]# rm -rf /backup/* 验证12345678910111213141516171819202122232425262728293031323334353637383940[root@localhost ~]# ./backup.sh backup serverreceiving incremental file list./grub/grub/device.map 63 100% 61.52kB/s 0:00:00 (xfer#1, to-check=15/18)grub/e2fs_stage1_5 13396 100% 6.39MB/s 0:00:00 (xfer#2, to-check=14/18)grub/fat_stage1_5 12636 100% 4.02MB/s 0:00:00 (xfer#3, to-check=13/18)grub/ffs_stage1_5 11780 100% 2.81MB/s 0:00:00 (xfer#4, to-check=12/18)grub/grub.conf 771 100% 188.23kB/s 0:00:00 (xfer#5, to-check=11/18)grub/iso9660_stage1_5 11772 100% 2.25MB/s 0:00:00 (xfer#6, to-check=10/18)grub/jfs_stage1_5 13284 100% 2.11MB/s 0:00:00 (xfer#7, to-check=9/18)grub/menu.lst -&gt; ./grub.confgrub/minix_stage1_5 11972 100% 1.63MB/s 0:00:00 (xfer#8, to-check=7/18)grub/reiserfs_stage1_5 14428 100% 1.38MB/s 0:00:00 (xfer#9, to-check=6/18)grub/splash.xpm.gz 1341 100% 119.05kB/s 0:00:00 (xfer#10, to-check=5/18)grub/stage1 512 100% 45.45kB/s 0:00:00 (xfer#11, to-check=4/18)grub/stage2 126116 100% 6.33MB/s 0:00:00 (xfer#12, to-check=3/18)grub/ufs2_stage1_5 12040 100% 587.89kB/s 0:00:00 (xfer#13, to-check=2/18)grub/vstafs_stage1_5 11380 100% 555.66kB/s 0:00:00 (xfer#14, to-check=1/18)grub/xfs_stage1_5 13980 100% 650.11kB/s 0:00:00 (xfer#15, to-check=0/18)sent 354 bytes received 148823 bytes 99451.33 bytes/sectotal size is 255482 speedup is 1.71 rsync&amp;inotify实时同步查看内核是否支持infotify，kernel 2.6.13开始正式并入内核。123456789101112131415161718192021222324252627282930313233343536[root@localhost ~]# uname -r2.6.32-504.el6.x86_64[root@localhost ~]# ll /proc/sys/fs/inotify/total 0-rw-r--r-- 1 root root 0 Sep 14 02:51 max_queued_events-rw-r--r-- 1 root root 0 Sep 14 02:51 max_user_instances-rw-r--r-- 1 root root 0 Sep 14 02:51 max_user_watches----------#表示监控事件队列 max_queued_events#表示最多监控实例数 max_user_instances#表示每个实例最多监控文件数 max_user_watches----------[root@localhost ~]# cat &gt;&gt; /etc/sysctl.conf &lt;&lt; EOF&gt; fs.inotify.max_queued_events = 32768&gt; fs.inotify.max_user_instances = 1024&gt; fs.inotify.max_user_watches = 90000000&gt; EOF[root@localhost ~]# sysctl -pnet.ipv4.ip_forward = 0net.ipv4.conf.default.rp_filter = 1net.ipv4.conf.default.accept_source_route = 0kernel.sysrq = 0kernel.core_uses_pid = 1net.ipv4.tcp_syncookies = 1net.bridge.bridge-nf-call-ip6tables = 0net.bridge.bridge-nf-call-iptables = 0net.bridge.bridge-nf-call-arptables = 0kernel.msgmnb = 65536kernel.msgmax = 65536kernel.shmmax = 68719476736kernel.shmall = 4294967296fs.inotify.max_queued_events = 32768fs.inotify.max_user_instances = 1024fs.inotify.max_user_watches = 90000000 安装inotify123456789# 下载 inotify-tools-3.13.tar.gz[root@localhost src]# tar -zxvf inotify-tools-3.13.tar.gz [root@localhost src]# cd inotify-tools-3.13[root@localhost inotify-tools-3.13]# ./configure# 用4个CPU编译[root@localhost inotify-tools-3.13]# make -j 4[root@localhost inotify-tools-3.13]# make install[root@localhost inotify-tools-3.13]# echo $?0 测试12345678910111213141516[root@localhost inotify-tools-3.13]# inotifywait -mrq -e create,move,delete,modify /var/www/html/# 在另一个终端登，在/var/www/html目彔进行相关的操作，然后，回到原来的终端查看监控变化情况。[root@localhost ~]# ssh root@192.168.134.137root@192.168.134.137's password: Last login: Wed Sep 14 02:41:24 2016 from 192.168.134.1[root@localhost ~]# cd /var/www/html/[root@localhost html]# lsgrub[root@localhost html]# cd grub/[root@localhost grub]# lsdevice.map fat_stage1_5 grub.conf jfs_stage1_5 minix_stage1_5 splash.xpm.gz stage2 vstafs_stage1_5e2fs_stage1_5 ffs_stage1_5 iso9660_stage1_5 menu.lst reiserfs_stage1_5 stage1 ufs2_stage1_5 xfs_stage1_5[root@localhost grub]# rm -rf grub.conf# 查看[root@localhost inotify-tools-3.13]# inotifywait -mrq -e create,move,delete,modify /var/www/html/ /var/www/html/grub/ DELETE grub.conf 同步时无交互1234567891011121314151617181920212223242526272829303132333435363738394041424344454647# 创建Key[root@localhost inotify-tools-3.13]# ssh-keygen Generating public/private rsa key pair.Enter file in which to save the key (/root/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /root/.ssh/id_rsa.Your public key has been saved in /root/.ssh/id_rsa.pub.The key fingerprint is:d6:8d:da:e0:25:d9:87:8c:d7:52:fb:4b:6c:92:05:af root@localhost.localdomainThe key's randomart image is:+--[ RSA 2048]----+| || || o || * * + || S X = o || o B o * || o . E = || + . || . |+-----------------+[root@localhost inotify-tools-3.13]# ssh-copy-id root@192.168.134.143root@192.168.134.143's password: Now try logging into the machine, with "ssh 'root@192.168.134.143'", and check in: .ssh/authorized_keysto make sure we haven't added extra keys that you weren't expecting.[root@localhost inotify-tools-3.13]# ssh 192.168.134.143Last login: Wed Sep 14 02:33:14 2016 from 192.168.134.1# 编写触发式同步脚本[root@localhost ~]# cat &gt;&gt; auto.sh &lt;&lt; EOF&gt; #!/bin/bash&gt; SRC=/var/www/html&gt; DST=root@192.168.134.143:/backup/&gt; inotifywait -mrq -e create,move,delete,modify $&#123;SRC&#125; | while read a b c&gt; do&gt; rsync -azP --delete /var/www/html/ $DST&gt; done&gt; EOF[root@localhost ~]# chmod +x auto.sh# 后台运行[root@localhost ~]# nohup auto.sh &amp;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[LVM Disk Extension]]></title>
      <url>%2F2017%2F04%2F11%2FLVM-Disk-Extension%2F</url>
      <content type="text"><![CDATA[LVM 磁盘扩容 磁盘扩容前磁盘状态查看 添加一个15G的硬盘扩容 物理卷 卷组 逻辑卷 挂载 磁盘扩容前磁盘状态查看12345[root@localhost ~]# df -HTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/VolGroup-lv_root ext4 14G 4.1G 9.1G 31% /tmpfs tmpfs 1.9G 234k 1.9G 1% /dev/shm/dev/sda1 ext4 508M 41M 441M 9% /boot 12345678910111213141516171819202122232425262728[root@localhost ~]# fdisk -lDisk /dev/sda: 16.1 GB, 16106127360 bytes255 heads, 63 sectors/track, 1958 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk identifier: 0x000d52ff Device Boot Start End Blocks Id System/dev/sda1 * 1 64 512000 83 LinuxPartition 1 does not end on cylinder boundary./dev/sda2 64 1959 15215616 8e Linux LVMDisk /dev/mapper/VolGroup-lv_root: 14.0 GB, 13967032320 bytes255 heads, 63 sectors/track, 1698 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk identifier: 0x00000000Disk /dev/mapper/VolGroup-lv_swap: 1610 MB, 1610612736 bytes255 heads, 63 sectors/track, 195 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk identifier: 0x00000000 添加一个15G的硬盘扩容方案为加1个5G的空间给/，加一个10G的空间给/Soft **重启机器后查看** 123456789101112131415161718192021222324252627282930313233343536[root@localhost ~]# fdisk -lDisk /dev/sda: 16.1 GB, 16106127360 bytes255 heads, 63 sectors/track, 1958 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk identifier: 0x000d52ff Device Boot Start End Blocks Id System/dev/sda1 * 1 64 512000 83 LinuxPartition 1 does not end on cylinder boundary./dev/sda2 64 1959 15215616 8e Linux LVMDisk /dev/sdb: 16.1 GB, 16106127360 bytes255 heads, 63 sectors/track, 1958 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk identifier: 0x00000000Disk /dev/mapper/VolGroup-lv_root: 14.0 GB, 13967032320 bytes255 heads, 63 sectors/track, 1698 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk identifier: 0x00000000Disk /dev/mapper/VolGroup-lv_swap: 1610 MB, 1610612736 bytes255 heads, 63 sectors/track, 195 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk identifier: 0x00000000 创建物理卷 PV12[root@localhost ~]# pvcreate /dev/sdb Physical volume "/dev/sdb" successfully created 查看物理卷情况1234567891011121314151617181920212223[root@localhost ~]# pvdisplay --- Physical volume --- PV Name /dev/sda2 VG Name VolGroup PV Size 14.51 GiB / not usable 3.00 MiB Allocatable yes (but full) PE Size 4.00 MiB Total PE 3714 Free PE 0 Allocated PE 3714 PV UUID MmltX4-mCKC-nrmm-QLKe-kA3Y-1xL-E2kM0v "/dev/sdb" is a new physical volume of "15.00 GiB" --- NEW Physical volume --- PV Name /dev/sdb VG Name PV Size 15.00 GiB Allocatable NO PE Size 0 Total PE 0 Free PE 0 Allocated PE 0 PV UUID oYU33-N7Mw-fNfK-JOUJ-hz0-X2ZL-FGULJ5 查看卷组情况 VG123456789101112131415161718192021[root@localhost ~]# vgdisplay --- Volume group --- VG Name VolGroup System ID Format lvm2 Metadata Areas 1 Metadata Sequence No 3 VG Access read/write VG Status resizable MAX LV 0 Cur LV 2 Open LV 2 Max PV 0 Cur PV 1 Act PV 1 VG Size 14.51 GiB PE Size 4.00 MiB Total PE 3714 Alloc PE / Size 3714 / 14.51 GiB Free PE / Size 0 / 0 VG UUID rEYWa4-Qvh1-3G4b-KwRc-gyLF-e954-pTGiiI 扩展卷组 将/dev/sdb 物理卷添加到VolGroup卷组中12[root@localhost ~]# vgextend /dev/VolGroup /dev/sdb Volume group "VolGroup" successfully extended 查看卷组大小变化123456789101112131415161718192021[root@localhost ~]# vgdisplay --- Volume group --- VG Name VolGroup System ID Format lvm2 Metadata Areas 2 Metadata Sequence No 4 VG Access read/write VG Status resizable MAX LV 0 Cur LV 2 Open LV 2 Max PV 0 Cur PV 2 Act PV 2 VG Size 29.50 GiB PE Size 4.00 MiB Total PE 7553 Alloc PE / Size 3714 / 14.51 GiB Free PE / Size 3839 / 15.00 GiB VG UUID rEYWa4-Qvh1-3G4b-KwRc-gyLF-e954-pTGiiI 将新的卷组空间划分到逻辑卷 LV123[root@localhost ~]# lvextend -L +5G /dev/mapper/VolGroup-lv_root Extending logical volume lv_root to 18.01 GiB Logical volume lv_root successfully resized 检查/root 逻辑卷1234[root@localhost ~]# e2fsck -f /dev/mapper/VolGroup-lv_roote2fsck 1.41.12 (17-May-2010)/dev/mapper/VolGroup-lv_root is mounted.e2fsck: Cannot continue, aborting. 重新定义分区大小123456[root@localhost ~]# resize2fs /dev/mapper/VolGroup-lv_rootresize2fs 1.41.12 (17-May-2010)Filesystem at /dev/mapper/VolGroup-lv_root is mounted on /; on-line resizing requiredold desc_blocks = 1, new_desc_blocks = 2Performing an on-line resize of /dev/mapper/VolGroup-lv_root to 4720640 (4k) blocks.The filesystem on /dev/mapper/VolGroup-lv_root is now 4720640 blocks long. 查看目录大小 （原来的14G扩充到20G）12345[root@localhost ~]# df -HTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/VolGroup-lv_root ext4 20G 4.1G 15G 23% /tmpfs tmpfs 1.9G 74k 1.9G 1% /dev/shm/dev/sda1 ext4 508M 41M 441M 9% /boot 逻辑卷空间的分配 LV查看VG剩余的空间123[root@localhost ~]# vgs VG #PV #LV #SN Attr VSize VFree VolGroup 2 2 0 wz--n- 29.50g 10.00g 将VG剩余的空间划分为LV12[root@localhost ~]# lvcreate -L 10G -n lv_Soft VolGroup Volume group "VolGroup" has insufficient free space (2559 extents): 2560 required. 空间不足，PV是按照块分的，一个PV默认4M，可以去VG查剩余PV的数量和总数。123456789101112131415161718192021[root@localhost ~]# vgdisplay --- Volume group --- VG Name VolGroup System ID Format lvm2 Metadata Areas 2 Metadata Sequence No 5 VG Access read/write VG Status resizable MAX LV 0 Cur LV 2 Open LV 2 Max PV 0 Cur PV 2 Act PV 2 VG Size 29.50 GiB PE Size 4.00 MiB Total PE 7553 Alloc PE / Size 4994 / 19.51 GiB Free PE / Size 2559 / 10.00 GiB VG UUID rEYWa4-Qvh1-3G4b-KwRc-gyLF-e954-pTGiiI 剩余2559个PE,可以基于PE分。12345678910[root@localhost ~]# lvcreate -l 2559 -n lv_Soft VolGroup Logical volume "lv_Soft" created[root@localhost ~]# vgs VG #PV #LV #SN Attr VSize VFree VolGroup 2 3 0 wz--n- 29.50g 0 [root@localhost ~]# lvs LV VG Attr LSize Pool Origin Data% Move Log Cpy%Sync Convert lv_Soft VolGroup -wi-a----- 10.00g lv_root VolGroup -wi-ao---- 18.01g lv_swap VolGroup -wi-ao---- 1.50g 把lv_Soft挂载到/Soft12345[root@localhost ~]# mkdir /Soft[root@localhost ~]# chmod 777 /Soft/[root@localhost ~]# cat &gt;&gt; /etc/fstab &lt;&lt; EOF&gt; /dev/mapper/VolGroup-lv_Soft /Soft/ ext4 defaults 0 0&gt; EOF 把lv_Soft 格式并指定文件系统1234567891011121314151617181920212223[root@localhost ~]# mkfs.ext4 /dev/mapper/VolGroup-lv_Soft mke2fs 1.41.12 (17-May-2010)Filesystem label=OS type: LinuxBlock size=4096 (log=2)Fragment size=4096 (log=2)Stride=0 blocks, Stripe width=0 blocks655360 inodes, 2620416 blocks131020 blocks (5.00%) reserved for the super userFirst data block=0Maximum filesystem blocks=268435456080 block groups32768 blocks per group, 32768 fragments per group8192 inodes per groupSuperblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632Writing inode tables: done Creating journal (32768 blocks): doneWriting superblocks and filesystem accounting information: doneThis filesystem will be automatically checked every 29 mounts or180 days, whichever comes first. Use tune2fs -c or -i to override. 查找且显示卷组逻辑卷1234567[root@localhost ~]# vgscan Reading all physical volumes. This may take a while... Found volume group "VolGroup" using metadata type lvm2[root@localhost ~]# lvscan ACTIVE '/dev/VolGroup/lv_root' [18.01 GiB] inherit ACTIVE '/dev/VolGroup/lv_swap' [1.50 GiB] inherit ACTIVE '/dev/VolGroup/lv_Soft' [10.00 GiB] inherit 挂载1[root@localhost ~]# mount -a 重启系统且确认123456[root@localhost ~]# df -HTFilesystem Type Size Used Avail Use% Mounted on/dev/mapper/VolGroup-lv_root ext4 20G 4.1G 15G 23% /tmpfs tmpfs 1.9G 74k 1.9G 1% /dev/shm/dev/sda1 ext4 508M 41M 441M 9% /boot/dev/mapper/VolGroup-lv_Soft ext4 11G 158M 9.9G 2% /Soft]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Install Zabbix Agent]]></title>
      <url>%2F2017%2F04%2F11%2FInstall-Zabbix-Agent%2F</url>
      <content type="text"><![CDATA[Installing Zabbix AgentFollow the below instructions to install Zabbix Agent on CentOS, RHEL 7/6/5 systems.Step 1 – Add Required Repository Before installing Zabbix Agent first configure zabbix yum repository using following commands as per your required version and operating system.12345678CentOS/RHEL 7:# rpm -Uvh http://repo.zabbix.com/zabbix/3.0/rhel/7/x86_64/zabbix-release-3.0-1.el7.noarch.rpmCentOS/RHEL 6:# rpm -Uvh http://repo.zabbix.com/zabbix/3.0/rhel/6/x86_64/zabbix-release-3.0-1.el6.noarch.rpmCentOS/RHEL 5:# rpm -Uvh http://repo.zabbix.com/zabbix/3.0/rhel/5/x86_64/zabbix-release-3.0-1.el5.noarch.rpm Step 2 – Install Zabbix Agent After installing yum repository packages in our system. Now use following command to install Zabbix agent on your Linux system.1# yum install zabbix zabbix-agent Step 3 – Edit Zabbix Agent Configuration As zabbix agent has been successfully installed on our remote system. Now we just need to configure zabbix agent by adding zabbix server ip in its configuration file /etc/zabbix/zabbix_agentd.conf12345#Server=[zabbix server ip]#Hostname=[ Hostname of client system ]Server=192.168.1.11Hostname=Server1 Step 4 – Restarting Zabbix Agent After adding zabbix server ip in configuration file, now restart agent service using below command.1# /etc/init.d/zabbix-agent restart To start and stop zabbix-agent service anytime use following commands.12# /etc/init.d/zabbix-agent start# /etc/init.d/zabbix-agent stop Congratulation’s! You have successfully installed Zabbix Agent. Lets add host in zabbix server to be monitory. install zabbix-agent on Debian &amp; UbuntuThis article describes installing zabbix-agent to Debian &amp; Ubuntu Linux distributions. Zabbix 2.0 for Debian 6 (Squeezy):1234wget http://repo.zabbix.com/zabbix/2.0/debian/pool/main/z/zabbix-release/zabbix-release_2.0-1squeeze_all.debdpkg -i zabbix-release_2.0-1squeeze_all.debapt-get updateapt-get install zabbix-agent Zabbix 2.0 for Debian 7 (Wheezy):1234wget http://repo.zabbix.com/zabbix/2.0/debian/pool/main/z/zabbix-release/zabbix-release_2.0-1wheezy_all.debdpkg -i zabbix-release_2.0-1wheezy_all.debapt-get updateapt-get install zabbix-agent Zabbix 2.0 for Ubuntu 10.04 LTS (Lucid):1234wget http://repo.zabbix.com/zabbix/2.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_2.0-1lucid_all.debdpkg -i zabbix-release_2.0-1lucid_all.debapt-get updateapt-get install zabbix-agent Zabbix 2.0 for Ubuntu 12.04 LTS (Precise):1234wget http://repo.zabbix.com/zabbix/2.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_2.0-1precise_all.debdpkg -i zabbix-release_2.0-1precise_all.debapt-get updateapt-get install zabbix-agent]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Fuel-OpenSrack-9-0]]></title>
      <url>%2F2017%2F04%2F11%2FFuel-OpenSrack-9-0%2F</url>
      <content type="text"><![CDATA[Fuel OpenSrack 9.0制作离线源下载离线源12local@Dell:~/下载/Fuel OpenStack/9.0$ lsbootstraps bootstraps.zip MirantisOpenStack-9.0.iso mirrors mirrors.zip 上传至配置好的部署节点1234567891011local@Dell:~/下载/Fuel OpenStack/9.0$ scp -r bootstraps mirrors root@10.20.0.2:/var/www/nailgun/local@Dell:~$ ssh root@10.20.0.2root@10.20.0.2's password: Last login: Tue Oct 11 06:08:42 2016[root@fuel ~]# cd /var/www/nailgun/[root@fuel nailgun]# lsbootstraps dump extra-repos mirrors mos-centos ubuntucentos error.html index.html mitaka-9.0 targetimages 查看活动状态的bootstrap列表123456[root@fuel nailgun]# fuel-bootstrap list+--------------------------------------+--------------------------------------+--------+| uuid | label | status |+--------------------------------------+--------------------------------------+--------+| d01c72e6-83f4-4a19-bb86-6085e40416e6 | d01c72e6-83f4-4a19-bb86-6085e40416e6 | |+--------------------------------------+--------------------------------------+--------+ 更新bootstrap123456[root@fuel nailgun]# fuel-bootstrap activate d01c72e6-83f4-4a19-bb86-6085e40416e6Starting new HTTP connection (1): 10.20.0.2Starting new HTTP connection (1): 10.20.0.2Starting new HTTP connection (1): 10.20.0.2Starting new HTTP connection (1): 10.20.0.2Bootstrap image d01c72e6-83f4-4a19-bb86-6085e40416e6 has been activated. 制作本地源1[root@fuel nailgun]# fuel-createmirror 部署节点其中网络保证没问题的情况下一般可以部署成功我这边部署成功后出现了一个很特殊的问题Horizon无法访问 本机Ping控制节点及计算节点都没问题 Ping Horizon无法通通过求助 无解 只好一遍一遍的重新部署做实验 问题依旧最后问题定位在了网络 需要检查控制节点的浮动IP范围所在的网卡是否为Trunk模式修改后成功访问 执行OpenStack命令报错报错内容You must provide a username via either 查看35357端口所监听的IP12root@node-1:~# netstat -anput | grep 35357tcp 0 0 192.168.0.3:35357 0.0.0.0:* LISTEN 8524/apache2 配置环境变量1234export OS_TENANT_NAME=adminexport OS_USERNAME=adminexport OS_PASSWORD=adminexport OS_AUTH_URL=http://192.168.0.3:35357/v2.0 故障解决12345678910root@node-1:~# nova host-list+-------------------+-------------+----------+| host_name | service | zone |+-------------------+-------------+----------+| node-1.domain.tld | consoleauth | internal || node-1.domain.tld | cert | internal || node-1.domain.tld | scheduler | internal || node-1.domain.tld | conductor | internal || node-2.domain.tld | compute | nova |+-------------------+-------------+----------+]]></content>
    </entry>

    
  
  
</search>
